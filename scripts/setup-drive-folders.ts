/**
 * Google Drive„Éï„Ç©„É´„ÉÄËá™Âãï‰ΩúÊàê„Çπ„ÇØ„É™„Éó„Éà
 * „Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„Éº„ÅÆÂêÑ„Ç´„ÉÜ„Ç¥„É™Áî®„ÅÆ„É´„Éº„Éà„Éï„Ç©„É´„ÉÄ„Çí‰ΩúÊàê
 */

import { google } from 'googleapis';
import * as dotenv from 'dotenv';

// Áí∞Â¢ÉÂ§âÊï∞„ÇíË™≠„ÅøËæº„Åø
dotenv.config({ path: '.env.local' });

// „Ç´„ÉÜ„Ç¥„É™ÂÆöÁæ©Ôºà„Éá„Éº„ÇøÊèêÂá∫„ÅåÂøÖË¶Å„Å™„Ç´„ÉÜ„Ç¥„É™„ÅÆ„ÅøÔºâ
const CATEGORIES = [
  { id: 'A', name: '„É°„Ç§„É≥„Ç§„É≥„Çø„Éì„É•„Éº', needsData: true },
  { id: 'D', name: 'Ë°®Á¥ôÂà∂‰Ωú', needsData: true },
  { id: 'K', name: '„É¨„Ç∏„Çß„É≥„Éâ„Ç§„É≥„Çø„Éì„É•„Éº', needsData: true },
  { id: 'L', name: 'ÊÑõÁü•ÁúåÁ´ãÈ´òÁ≠âÊäÄË°ìÂ∞ÇÈñÄÊ†°', needsData: true },
  { id: 'M', name: 'Ôº†18„Ç≥„É©„Éú‰ºÅÁîª', needsData: true },
  { id: 'C', name: 'Êñ∞Ë¶è‰ºÅÊ•≠', needsData: true },
];

async function getDriveClient() {
  const credentialsJson = process.env.GOOGLE_SERVICE_ACCOUNT_KEY;
  if (!credentialsJson) {
    throw new Error('GOOGLE_SERVICE_ACCOUNT_KEY environment variable is not set');
  }

  const credentials = JSON.parse(credentialsJson);
  const auth = new google.auth.GoogleAuth({
    credentials,
    scopes: [
      'https://www.googleapis.com/auth/drive.file',
      'https://www.googleapis.com/auth/spreadsheets',
    ],
  });

  return google.drive({ version: 'v3', auth });
}

async function getSheetsClient() {
  const credentialsJson = process.env.GOOGLE_SERVICE_ACCOUNT_KEY;
  if (!credentialsJson) {
    throw new Error('GOOGLE_SERVICE_ACCOUNT_KEY environment variable is not set');
  }

  const credentials = JSON.parse(credentialsJson);
  const auth = new google.auth.GoogleAuth({
    credentials,
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  return google.sheets({ version: 'v4', auth });
}

async function createFolder(drive: any, folderName: string, parentFolderId?: string) {
  const requestBody: any = {
    name: folderName,
    mimeType: 'application/vnd.google-apps.folder',
  };

  if (parentFolderId) {
    requestBody.parents = [parentFolderId];
  }

  const response = await drive.files.create({
    requestBody,
    fields: 'id, name, webViewLink',
  });

  return response.data;
}

async function updateCategoryMaster(sheets: any, spreadsheetId: string, categoryId: string, driveFolderId: string) {
  // „Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„Éº„ÇíÂèñÂæó
  const response = await sheets.spreadsheets.values.get({
    spreadsheetId,
    range: '„Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„Éº!A:J',
  });

  const rows = response.data.values || [];
  const headerRow = rows[0];
  const driveIdColumnIndex = headerRow.indexOf('Drive„Éï„Ç©„É´„ÉÄID');

  if (driveIdColumnIndex === -1) {
    throw new Error('Drive„Éï„Ç©„É´„ÉÄIDÂàó„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
  }

  // „Ç´„ÉÜ„Ç¥„É™ID„ÅÆË°å„ÇíÊé¢„Åô
  const rowIndex = rows.findIndex((row: string[]) => row[0] === categoryId);
  if (rowIndex === -1) {
    throw new Error(`„Ç´„ÉÜ„Ç¥„É™ ${categoryId} „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì`);
  }

  // „Çª„É´„ÇíÊõ¥Êñ∞
  const cellAddress = `„Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„Éº!${String.fromCharCode(65 + driveIdColumnIndex)}${rowIndex + 1}`;
  await sheets.spreadsheets.values.update({
    spreadsheetId,
    range: cellAddress,
    valueInputOption: 'RAW',
    requestBody: {
      values: [[driveFolderId]],
    },
  });

  console.log(`  ‚úÖ „Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„ÉºÊõ¥Êñ∞: ${categoryId} ‚Üí ${driveFolderId}`);
}

async function main() {
  console.log('üöÄ Google Drive„Éï„Ç©„É´„ÉÄËá™Âãï‰ΩúÊàê„Çπ„ÇØ„É™„Éó„ÉàÈñãÂßã\n');

  const drive = await getDriveClient();
  const sheets = await getSheetsClient();
  const spreadsheetId = process.env.YUMEMAGA_SPREADSHEET_ID!;

  console.log('üìÅ „ÇÜ„ÇÅ„Éû„Ç¨„Éá„Éº„ÇøÊèêÂá∫Áî®„É´„Éº„Éà„Éï„Ç©„É´„ÉÄ„Çí‰ΩúÊàê„Åó„Åæ„Åô...\n');

  // 1. „ÇÜ„ÇÅ„Éû„Ç¨Áµ±Âêà„É´„Éº„Éà„Éï„Ç©„É´„ÉÄ„Çí‰ΩúÊàê
  const rootFolder = await createFolder(drive, '„Äê„ÇÜ„ÇÅ„Éû„Ç¨„Äë„Éá„Éº„ÇøÊèêÂá∫');
  console.log(`‚úÖ „É´„Éº„Éà„Éï„Ç©„É´„ÉÄ‰ΩúÊàê: ${rootFolder.name}`);
  console.log(`   ID: ${rootFolder.id}`);
  console.log(`   URL: ${rootFolder.webViewLink}\n`);

  // 2. ÂêÑ„Ç´„ÉÜ„Ç¥„É™„ÅÆ„Éï„Ç©„É´„ÉÄ„Çí‰ΩúÊàê
  for (const category of CATEGORIES) {
    console.log(`üìÇ „Ç´„ÉÜ„Ç¥„É™${category.id}: ${category.name}`);

    const folderName = `${category.id}_${category.name}`;
    const folder = await createFolder(drive, folderName, rootFolder.id);

    console.log(`  ‚úÖ „Éï„Ç©„É´„ÉÄ‰ΩúÊàê: ${folder.name}`);
    console.log(`     ID: ${folder.id}`);
    console.log(`     URL: ${folder.webViewLink}`);

    // „Ç´„ÉÜ„Ç¥„É™„Éû„Çπ„Çø„Éº„ÇíÊõ¥Êñ∞
    await updateCategoryMaster(sheets, spreadsheetId, category.id, folder.id!);

    console.log('');
  }

  console.log('‚ú® „Åô„Åπ„Å¶„ÅÆ„Éï„Ç©„É´„ÉÄ‰ΩúÊàê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ');
  console.log('\nüìå Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:');
  console.log('1. Google Drive„Åß„É´„Éº„Éà„Éï„Ç©„É´„ÉÄ„ÇíÁ¢∫Ë™ç');
  console.log(`   ${rootFolder.webViewLink}`);
  console.log('2. „Çµ„Éº„Éì„Çπ„Ç¢„Ç´„Ç¶„É≥„Éà„Å´Á∑®ÈõÜÊ®©Èôê„Åå„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç');
  console.log('3. „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Åß„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Çí„ÉÜ„Çπ„Éà');
}

main().catch((error) => {
  console.error('‚ùå „Ç®„É©„Éº:', error.message);
  process.exit(1);
});
